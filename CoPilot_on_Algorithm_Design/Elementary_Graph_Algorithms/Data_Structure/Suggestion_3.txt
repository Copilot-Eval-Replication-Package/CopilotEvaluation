"Synthesizing 2/10 solutions

=======

# the graph should be able to add nodes and edges.
# the graph should be able to return a list of all the nodes in the graph.
# the graph should be able to return a list of all the edges in the graph.
# the graph should be able to return a list of all the neighbors of a node.
# the graph should be able to add a node to the graph.
# the graph should be able to add an edge to the graph.
# the graph should be able to remove a node from the graph.
# the graph should be able to remove an edge from the graph.
# the graph should be able to return the number of nodes in the graph.
# the graph should be able to return the number of edges in the graph.
# the graph should be able to return the degree of a node.
# the graph should be able to return the degree of all the nodes in the graph.
# the graph should be able to return the average degree of the graph.
# the graph should be able to return the number of self loops in the graph.
# the graph should be able to return the number of multiple edges in the graph.
# the graph should be able to return the number of isolated nodes in the graph.
# the graph should be able to return the number of connected components in the graph.
# the graph should be able to return the number of strongly connected components in the graph.
# the graph should be able to return the number of weakly connected components in the graph.
# the graph should be able to return the number of nodes in the largest connected component in the graph.
# the graph should be able to return the number of nodes in the largest strongly connected component in the graph.
# the graph should be able to return the number of nodes in the largest weakly connected component in the graph.
# the graph should be able to return the number of nodes in the smallest connected component in the graph.
# the graph should be able to return the number of nodes in the smallest strongly connected component in the graph.
# the graph should be able to return the number of nodes in the smallest weakly connected component in the graph.
# the graph should be able to return the number of nodes in the largest weakly connected component in the graph.
# the graph should be able to return the number of nodes

=======

# the graph should be able to add nodes and edges.
# the graph should be able to return a list of all the nodes in the graph.
# the graph should be able to return a list of all the edges in the graph.
# the graph should be able to return a list of all the neighbors of a node.
# the graph should be able to add a new edge to the graph.
# the graph should be able to remove an edge from the graph.
# the graph should be able to remove a node from the graph.
# the graph should be able to return the number of nodes in the graph.
# the graph should be able to return the number of edges in the graph.
# the graph should be able to return the degree of a node.
# the graph should be able to return the degree of all the nodes in the graph.
# the graph should be able to return the average degree of the graph.
# the graph should be able to return the number of self loops in the graph.
# the graph should be able to return the number of multiple edges in the graph.
# the graph should be able to return the number of isolated nodes in the graph.
# the graph should be able to return the number of connected components in the graph.
# the graph should be able to return the number of strongly connected components in the graph.
# the graph should be able to return the number of weakly connected components in the graph.
# the graph should be able to return the number of nodes in the largest connected component in the graph.
# the graph should be able to return the number of nodes in the largest strongly connected component in the graph.
# the graph should be able to return the number of nodes in the largest weakly connected component in the graph.
# the graph should be able to return the number of nodes in the smallest connected component in the graph.
# the graph should be able to return the number of nodes in the smallest strongly connected component in the graph.
# the graph should be able to return the number of nodes in the smallest weakly connected component in the graph.
# the graph should be able to return the number of nodes in the largest weakly connected component in the graph.
# the graph should be able to return the number of nodes in the largest strongly connected component in the graph.
# the graph"